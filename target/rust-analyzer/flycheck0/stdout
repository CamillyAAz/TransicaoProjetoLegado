{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.13.3","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/target-lexicon-0.13.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/target-lexicon-0.13.3/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/home/luis-lindner/target/debug/build/target-lexicon-55cd5c206af7b01a/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.13.3","linked_libs":[],"linked_paths":[],"cfgs":["feature=\"rust_1_40\""],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/target-lexicon-25fa796945a23fa7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.13.3","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/target-lexicon-0.13.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"target_lexicon","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/target-lexicon-0.13.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/home/luis-lindner/target/debug/deps/libtarget_lexicon-aef322f40f76b9de.rlib","/home/luis-lindner/target/debug/deps/libtarget_lexicon-aef322f40f76b9de.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-build-config-0.25.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-build-config-0.25.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module","resolve-config"],"filenames":["/home/luis-lindner/target/debug/build/pyo3-build-config-195b92fce4ad6e5e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/home/luis-lindner/target/debug/deps/libonce_cell-8d8f0f4e9d9a1d14.rlib","/home/luis-lindner/target/debug/deps/libonce_cell-8d8f0f4e9d9a1d14.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.101","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.101/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.101/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["proc-macro"],"filenames":["/home/luis-lindner/target/debug/build/proc-macro2-8cfaa477986a3d8e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.20","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libunicode_ident-f1c0f7cb8d2e950d.rlib","/home/luis-lindner/target/debug/deps/libunicode_ident-f1c0f7cb8d2e950d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/home/luis-lindner/target/debug/build/quote-63c10b5fc1327b7e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libautocfg-e43f4f6a57543659.rlib","/home/luis-lindner/target/debug/deps/libautocfg-e43f4f6a57543659.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/luis-lindner/target/debug/build/libc-500d20659087556a/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.25.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/pyo3-build-config-974a0b87dc0582e3/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.101","linked_libs":[],"linked_paths":[],"cfgs":["wrap_proc_macro","proc_macro_span_location","proc_macro_span_file"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/proc-macro2-969b4aee97fecd2a/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/quote-ddf20bb25101601c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","linked_libs":[],"linked_paths":[],"cfgs":["freebsd12"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/libc-40017b32f6d552ec/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/home/luis-lindner/target/debug/build/memoffset-2d8cf2c18ddf55a7/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"heck","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libheck-7af3b78169a7edcf.rlib","/home/luis-lindner/target/debug/deps/libheck-7af3b78169a7edcf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/home/luis-lindner/target/debug/deps/libonce_cell-199800b58c1e0d8f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.7","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indoc-2.0.7/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"indoc","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indoc-2.0.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libindoc-e01c401d973e93b0.so"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unindent@0.2.4","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unindent-0.2.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unindent","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unindent-0.2.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libunindent-dcbd473de7e0c215.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-build-config-0.25.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pyo3_build_config","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-build-config-0.25.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module","resolve-config"],"filenames":["/home/luis-lindner/target/debug/deps/libpyo3_build_config-fd5fd45de3491a73.rlib","/home/luis-lindner/target/debug/deps/libpyo3_build_config-fd5fd45de3491a73.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.101","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.101/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.101/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["proc-macro"],"filenames":["/home/luis-lindner/target/debug/deps/libproc_macro2-e95535bffede043f.rlib","/home/luis-lindner/target/debug/deps/libproc_macro2-e95535bffede043f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.177","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.177/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/luis-lindner/target/debug/deps/liblibc-493077d89bd3e850.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","linked_libs":[],"linked_paths":[],"cfgs":["tuple_ty","allow_clippy","maybe_uninit","doctests","raw_ref_macros","stable_const","stable_offset_of"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/memoffset-d365e6f2c95e7d58/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-backend-0.25.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-backend-0.25.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/build/pyo3-macros-backend-afa85c326c86754b/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-ffi-0.25.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-ffi-0.25.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module"],"filenames":["/home/luis-lindner/target/debug/build/pyo3-ffi-354a269169d62e00/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.41","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.41/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/home/luis-lindner/target/debug/deps/libquote-91b20a0331f86ee9.rlib","/home/luis-lindner/target/debug/deps/libquote-91b20a0331f86ee9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module","indoc","macros","pyo3-macros","unindent"],"filenames":["/home/luis-lindner/target/debug/build/pyo3-5f8bef29c0270be0/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memoffset","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.9.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/home/luis-lindner/target/debug/deps/libmemoffset-bcf1a9fb0d6b975d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.25.1","linked_libs":[],"linked_paths":[],"cfgs":["rustc_has_once_lock","cargo_toml_lints","rustc_has_extern_c_unwind","invalid_from_utf8_lint","c_str_lit","diagnostic_namespace","io_error_more","fn_ptr_eq"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/pyo3-macros-backend-843ce82e198ed18c/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.25.1","linked_libs":[],"linked_paths":[],"cfgs":["Py_3_7","Py_3_8","Py_3_9","Py_3_10","Py_3_11","Py_3_12","rustc_has_once_lock","cargo_toml_lints","rustc_has_extern_c_unwind","invalid_from_utf8_lint","c_str_lit","diagnostic_namespace","io_error_more","fn_ptr_eq"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/pyo3-ffi-504d3e12ba425e49/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@2.0.107","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.107/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.107/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","full","parsing","printing","proc-macro"],"filenames":["/home/luis-lindner/target/debug/deps/libsyn-c261b7a9c91c6b80.rlib","/home/luis-lindner/target/debug/deps/libsyn-c261b7a9c91c6b80.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-backend-0.25.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pyo3_macros_backend","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-backend-0.25.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libpyo3_macros_backend-1e1ea3bafdff133c.rlib","/home/luis-lindner/target/debug/deps/libpyo3_macros_backend-1e1ea3bafdff133c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-ffi-0.25.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pyo3_ffi","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-ffi-0.25.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module"],"filenames":["/home/luis-lindner/target/debug/deps/libpyo3_ffi-40b1b1c72ca5e05f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3@0.25.1","linked_libs":[],"linked_paths":[],"cfgs":["Py_3_7","Py_3_8","Py_3_9","Py_3_10","Py_3_11","Py_3_12","rustc_has_once_lock","cargo_toml_lints","rustc_has_extern_c_unwind","invalid_from_utf8_lint","c_str_lit","diagnostic_namespace","io_error_more","fn_ptr_eq"],"env":[],"out_dir":"/home/luis-lindner/target/debug/build/pyo3-1ac2776db6e53b09/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3-macros@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-0.25.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"pyo3_macros","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-0.25.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/luis-lindner/target/debug/deps/libpyo3_macros-35bc1eca5da0f9e1.so"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pyo3@0.25.1","manifest_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pyo3","src_path":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extension-module","indoc","macros","pyo3-macros","unindent"],"filenames":["/home/luis-lindner/target/debug/deps/libpyo3-c4da94555d8f4389.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `add_function` found for reference `&pyo3::types::PyModule` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":203,"byte_end":215,"line_start":10,"line_end":10,"column_start":7,"column_end":19,"is_primary":true,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":7,"highlight_end":19}],"label":"method not found in `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `add_function` found for reference `&pyo3::types::PyModule` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&pyo3::types::PyModule`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `add_function` found for reference `&pyo3::types::PyModule` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":203,"byte_end":215,"line_start":10,"line_end":10,"column_start":7,"column_end":19,"is_primary":true,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":7,"highlight_end":19}],"label":"method not found in `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `add_function` found for reference `&pyo3::types::PyModule` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&pyo3::types::PyModule`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `&pyo3::types::PyModule: WrapPyFunctionArg<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":248,"byte_end":249,"line_start":10,"line_end":10,"column_start":52,"column_end":53,"is_primary":true,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":52,"highlight_end":53}],"label":"the trait `WrapPyFunctionArg<'_, _>` is not implemented for `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/src/macros.rs","byte_start":4583,"byte_end":4644,"line_start":145,"line_end":145,"column_start":9,"column_end":70,"is_primary":false,"text":[{"text":"        $crate::impl_::pyfunction::WrapPyFunctionArg::wrap_pyfunction(","highlight_start":9,"highlight_end":70}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":216,"byte_end":250,"line_start":10,"line_end":10,"column_start":20,"column_end":54,"is_primary":false,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":20,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"wrap_pyfunction!","def_site_span":{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/src/macros.rs","byte_start":4167,"byte_end":4195,"line_start":133,"line_end":133,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! wrap_pyfunction {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `WrapPyFunctionArg<'py, T>`:\n  &pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\n  &pyo3::Bound<'py, pyo3::types::PyModule>\n  pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\n  pyo3::Bound<'py, pyo3::types::PyModule>\n  pyo3::Python<'py>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `&pyo3::types::PyModule: WrapPyFunctionArg<'_, _>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapPyFunctionArg<'_, _>` is not implemented for `&pyo3::types::PyModule`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapPyFunctionArg<'py, T>`:\u001b[0m\n\u001b[0m             &pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             &pyo3::Bound<'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Bound<'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Python<'py>\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `&pyo3::types::PyModule: WrapPyFunctionArg<'_, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":248,"byte_end":249,"line_start":10,"line_end":10,"column_start":52,"column_end":53,"is_primary":true,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":52,"highlight_end":53}],"label":"the trait `WrapPyFunctionArg<'_, _>` is not implemented for `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/src/macros.rs","byte_start":4583,"byte_end":4644,"line_start":145,"line_end":145,"column_start":9,"column_end":70,"is_primary":false,"text":[{"text":"        $crate::impl_::pyfunction::WrapPyFunctionArg::wrap_pyfunction(","highlight_start":9,"highlight_end":70}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":216,"byte_end":250,"line_start":10,"line_end":10,"column_start":20,"column_end":54,"is_primary":false,"text":[{"text":"    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;","highlight_start":20,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"wrap_pyfunction!","def_site_span":{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-0.25.1/src/macros.rs","byte_start":4167,"byte_end":4195,"line_start":133,"line_end":133,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! wrap_pyfunction {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `WrapPyFunctionArg<'py, T>`:\n  &pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\n  &pyo3::Bound<'py, pyo3::types::PyModule>\n  pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\n  pyo3::Bound<'py, pyo3::types::PyModule>\n  pyo3::Python<'py>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `&pyo3::types::PyModule: WrapPyFunctionArg<'_, _>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    m.add_function(wrap_pyfunction!(sum_as_string, m)?)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapPyFunctionArg<'_, _>` is not implemented for `&pyo3::types::PyModule`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapPyFunctionArg<'py, T>`:\u001b[0m\n\u001b[0m             &pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             &pyo3::Bound<'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Borrowed<'_, 'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Bound<'py, pyo3::types::PyModule>\u001b[0m\n\u001b[0m             pyo3::Python<'py>\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `&pyo3::types::PyModule: From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":127,"byte_end":138,"line_start":8,"line_end":8,"column_start":1,"column_end":12,"is_primary":true,"text":[{"text":"#[pymodule]","highlight_start":1,"highlight_end":12}],"label":"the trait `From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not implemented for `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":127,"byte_end":138,"line_start":8,"line_end":8,"column_start":1,"column_end":12,"is_primary":false,"text":[{"text":"#[pymodule]","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[pymodule]","def_site_span":{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-0.25.1/src/lib.rs","byte_start":2058,"byte_end":2127,"line_start":40,"line_end":40,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn pymodule(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required for `BoundRef<'_, '_, pyo3::types::PyModule>` to implement `Into<&pyo3::types::PyModule>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `&pyo3::types::PyModule: From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not satisfied\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[pymodule]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not implemented for `&pyo3::types::PyModule`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `BoundRef<'_, '_, pyo3::types::PyModule>` to implement `Into<&pyo3::types::PyModule>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `pymodule` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the trait bound `&pyo3::types::PyModule: From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":127,"byte_end":138,"line_start":8,"line_end":8,"column_start":1,"column_end":12,"is_primary":true,"text":[{"text":"#[pymodule]","highlight_start":1,"highlight_end":12}],"label":"the trait `From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not implemented for `&pyo3::types::PyModule`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":127,"byte_end":138,"line_start":8,"line_end":8,"column_start":1,"column_end":12,"is_primary":false,"text":[{"text":"#[pymodule]","highlight_start":1,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[pymodule]","def_site_span":{"file_name":"/home/luis-lindner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pyo3-macros-0.25.1/src/lib.rs","byte_start":2058,"byte_end":2127,"line_start":40,"line_end":40,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn pymodule(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required for `BoundRef<'_, '_, pyo3::types::PyModule>` to implement `Into<&pyo3::types::PyModule>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `&pyo3::types::PyModule: From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not satisfied\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[pymodule]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<BoundRef<'_, '_, pyo3::types::PyModule>>` is not implemented for `&pyo3::types::PyModule`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `BoundRef<'_, '_, pyo3::types::PyModule>` to implement `Into<&pyo3::types::PyModule>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `pymodule` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///home/luis-lindner#projectRust@0.1.0","manifest_path":"/home/luis-lindner/Cargo.toml","target":{"kind":["cdylib"],"crate_types":["cdylib"],"name":"projectRust","src_path":"/home/luis-lindner/src/lib.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"build-finished","success":false}
